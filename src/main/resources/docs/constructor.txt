생성자 주입을 선택해라
과거에는 수정자 주입과 필드 주입을 많이 사용했지만, 최근에는 스프링을 포함한 DI 프레임워크 대부분이 생성자 주입을 권장
그 이유는 다음과 같다
- 불변
    - 대부분의 의존관계 주입은 한번 일어나면 애플리케이션 종료시점까지 의존관계를 변경할 일 X.
      오히려 대부분의 의존 관계는 어플리케이션 종료 전까지 불변이어야 한다.
    - 수정자 주입을 사용하면 setXxx 메서드를 public 으로 열어두어야 한다.
    - 누군가 실수로 변경할 수도 있고, 변경하면 안되는 메서드를 열어두는 것은 좋지 못한 설계 방법
    - 생성자 주입은 객체를 생성할 때 딱 1번만 호출되므로 이후에는 호출되는 일이 없기 때문에 불변하게 설계할 수 있다.

- 누락
    - 프레임워크 없이 순수한 자바 코드를 단위 테스트 하는 경우 @Autowired 가 프레임워크 안에서 동작할 때는 의존 관계가 없으면 오류 발생
    - 의존관계 주입이 누락되면 NPE(Null Point Exception) 이 발생하는데, 생성자 주입을 사용하면 주입 데이터를 누락했을 때 컴파일 오류 발생
      및 어떤 값을 필수로 주입해야 하는지 알 수 있다.

- final 키워드
    - 생성자 주입을 사용하면 필드에 final 키워드를 사용할 수 있다. 그래서 생성자에서 혹시라도 값이 설정되지 않는 오류를 컴파일 시점에서 막아준다.
    - 필수 필드에 값을 설정핮 않고 누락시 자바는 컴파일 시점에서 not have been initialized 오류 발생
    - 컴파일 오류가 가장 좋은 오류다

- 정리
    - 생성자 주입 방식을 선택하는 이유는 어러가지가 있지만, 프레임워크에 의존하지 않고, 순수한 자바 언어의 특징을 잘 살리는 방법
    - 기본으로 생성자 주입을 사용하고, 필수 값이 아닌 경우에는 수정자 주입 방식을 옵션으로 부여.
      생성자 주입과 수정자 주입을 동시에 사용할 수 있다.
    - 항상 생성자 주입을 선택하자. 그리고 가끔 옵션이 필요하면 수정자 주입을 선택해라. 필드 주입은 사용하지 않는게 좋다.